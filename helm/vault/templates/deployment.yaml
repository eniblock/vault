{{- $fullName := include "vault.fullname" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "vault.fullname" . }}
  labels:
    {{- include "vault.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "vault.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "vault.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "vault.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: VAULT_DEBUG
              value: {{ .Values.server.debug | quote }}
            {{- range $key, $value := .Values.server.initSecrets }}
            - name: {{ $key | quote }}
              valueFrom:
                secretKeyRef:
                  name: {{ $fullName | quote }}
                  key: {{ $key | quote }}
            {{- end }}
            {{ if .Values.server.dev.enabled }}
            - name: VAULT_ROOT_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ include "vault.fullname" . | quote }}
                  key: VAULT_ROOT_TOKEN
            {{ end }}
          ports:
            - name: http
              containerPort: 8200
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /vault/file
              name: {{ include "vault.fullname" . }}
            - name: configuration
              mountPath: /extra/config
            {{- if .Values.customInitScript }}
            - name: custom-init-volume
              mountPath: /init
            {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: {{ include "vault.fullname" . }}
          persistentVolumeClaim:
            claimName: {{ include "vault.fullname" . }}
        - name: configuration
          configMap:
            name: {{ include "vault.fullname" . }}-configuration
      {{- if .Values.customInitScript }}
        - name: custom-init-volume
          configMap:
            name: {{ include "vault.fullname" . }}-custom-init
      {{- end }}
